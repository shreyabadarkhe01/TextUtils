{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","style","height","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","width","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","length","newText","showAlert","split","map","s","substring","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","defaultProps","changeAboutTo","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8acbf2ff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    if(props.alert!==null){\r\n    return (\r\n    <div style={{height:'50px' }}>\r\n    \r\n        \r\n       <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    </div>\r\n    )\r\n    }\r\n    else{\r\n    return(\r\n        <div style={{height:'50px' }}>\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react' //created by typing rfc and enter\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {   \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.changeAboutTo}</Link> */}\r\n          {/* <a className=\"nav-link\" href=\"/about\">{props.changeAboutTo}</a> */}\r\n        </li>\r\n       \r\n      </ul>\r\n     \r\n     <div className=\"d-flex\">\r\n      <div className=\"bg-primary rounded mx-2\" style={{height:'30px',width:'30px'}}></div>\r\n     </div>\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='dark'? 'white':'black'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'? 'Dark':'Light'}Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}     \r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    changeAboutTo: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    changeAboutTo: 'About'\r\n};\r\n","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\nconst handleUpClick = ()=>{\r\n    //console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\",\"success\");\r\n}   \r\nconst handleLowClick = ()=>{\r\n    \r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\",\"success\");\r\n}   \r\nconst handleClearClick = ()=>{\r\n    \r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\",\"success\");\r\n}   \r\n\r\n// let capitalize = (element=>{\r\n  //   //return element.replace(element[0],element[0].toUpperCase());\r\n  //   return element.charAt(0).toUpperCase() + element.substring(1);\r\n  // })\r\n  \r\n  const handleCapitalizeClick = ()=>{\r\n    \r\n    // let charArr = text.toLowerCase().split(\" \")\r\n    // let newText = charArr.map(capitalize).join(\" \");\r\n    //let newText = text.toLowerCase().split(\" \").map(capitalize).join(\" \");\r\n    let newText = text.toLowerCase().split(\" \").map(s=> s.charAt(0).toUpperCase() + s.substring(1)).join(\" \");\r\n    setText(newText);\r\n    props.showAlert(\"Capitalized!\",\"success\");\r\n  }   \r\n  \r\n  const handleCopyClick = ()=>{\r\n      \r\n      let text = document.getElementById('myBox');\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      document.getSelection().removeAllRanges();  //to deselect the copied text\r\n      props.showAlert(\"Text Copied successfully!\",\"success\");\r\n  }  \r\n  \r\n  const handleExtraSpacesClick = () =>{\r\n     let newText = text.split(/[ ]+/);\r\n     \r\n     setText(newText.join(\" \"));\r\n     props.showAlert(\"Extra spaces are removed successfully!\",\"success\");\r\n\r\n  }\r\n\r\n\r\nconst handleOnChange = (event)=>{\r\n    //console.log(\"On Change\");\r\n    setText(event.target.value);\r\n}   \r\nconst [text,setText] = useState('');\r\n//text = \"sddfsd\"; //Wrong way \r\n//setText(\"new text\"); //correct way to change state\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'? 'white':'#042743'}} >\r\n\r\n        <h1 className='mb-2'>{props.heading}</h1> \r\n      \r\n        <div className=\"mb-3\">\r\n         <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'? '#13466e':'white', color: props.mode==='dark'? 'white':'black'}}></textarea>\r\n        </div>\r\n\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCapitalizeClick}>Capitalize the First Letter</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>Copy Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpacesClick}>Remove Extra Spaces</button>\r\n\r\n    </div>\r\n    <div className=\"container my-2\" style={{color:props.mode==='dark'? 'white':'#042743'}} >\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length } words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\nimport React, { useState } from 'react';\n\n// import {BrowserRouter as Router , Routes ,Route } from 'react-router-dom';\n\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\n\n\nfunction App() {\n  const [mode,setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },3000)\n    // document.style.transform = ease-out\n  }\n\n\n  const toggleMode = ()=> {\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      //document.title = \"TextUtils - Dark Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      //document.title = \"TextUtils - Light Mode\";\n    }\n  }\n\n  return (\n\n    <>\n    {/* <Router> */}\n\n    \n          {/* <Navbar title = \"Textutils\" changeAboutTo = \"About Us\" />  */}\n          {/* <Navbar /> */}\n        <Navbar title = \"Textutils\" mode={mode} toggleMode = {toggleMode} /> \n        <Alert alert = {alert} />\n\n        <div className=\"container my-3 \">\n          {/* <Routes>\n            <Route path=\"/about\" element={<About mode={mode}/>}  />                        \n            <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character counter , Remove extra spaces\" mode={mode} />} />                      \n          </Routes> */}\n\n<TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character counter , Remove extra spaces\" mode={mode}/>\n        </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n//import About from './components/About';\n//import TextForm from './components/About';\nimport reportWebVitals from './reportWebVitals';\n// import { BrowserRouter } from \"react-router-dom\";\n// import {\n  \n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   {/* <BrowserRouter> */}\n          <App/>\n          {/* <Routes> */}\n\n            {/* <Route path=\"/\" element={<About />} />\n            <Route path=\"/about\" element={<TextForm  />} /> */}\n          {/* </Routes> */}\n      {/* </BrowserRouter> */}\n  </React.StrictMode>\n);\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}